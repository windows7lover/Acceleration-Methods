name: Generate PDF

on:
  push:
    branches:
      - gh-pages  # Trigger the workflow on pushes to gh-pages

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '2.7'  # Ensure this matches your Ruby version

    - name: Install Jekyll dependencies
      run: |
        gem install bundler
        bundle install

    - name: Build Jekyll site
      run: bundle exec jekyll build

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Cache Pandoc
      id: cache-pandoc
      uses: actions/cache@v3
      with:
        path: /usr/local/bin/pandoc
        key: ${{ runner.os }}-pandoc

    - name: Install Pandoc
      if: steps.cache-pandoc.outputs.cache-hit != 'true'
      run: sudo apt-get install -y pandoc

    - name: Cache TeX Live
      id: cache-texlive
      uses: actions/cache@v3
      with:
        path: /usr/local/texlive
        key: ${{ runner.os }}-texlive

    - name: Install TeX Live
      if: steps.cache-texlive.outputs.cache-hit != 'true'
      run: sudo apt-get install -y texlive-full

    - name: Run PDF generation script
      run: |
        python generate_pdf.py

    - name: Commit and push PDF to gh-pages
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git fetch origin
        git checkout gh-pages || git checkout --orphan gh-pages
        git reset --hard
        cp output.pdf index.pdf
        git add index.pdf
        git commit -m "Update generated PDF"
        git push -f origin gh-pages
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
